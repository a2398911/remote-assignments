{"version":3,"sources":["components/header/NavbarMenu.js","components/header/NavbarHam.js","components/header/Navbar.js","components/header/Header.js","components/Hero.js","components/content/ContentBoxs.js","components/content/ContentTitle.js","components/content/Content.js","App.js","serviceWorker.js","index.js"],"names":["NavbarMenu","props","react_default","a","createElement","Fragment","className","onClick","showNavbarMenu","NavbarHam","Navbar","header_NavbarMenu","header_NavbarHam","Header","header_Navbar","NavbarMenuStatus","Hero","changeTitle","title","ConnetBoxs","ContentTitle","Content","content_ContentTitle","ContentBoxs","changeShowBoxs","showContentStatus","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChangeTitle","setState","heroTitle","handleShowBox","showContentBoxs","handleShowNavMenu","currentState","state","navbarMenu","document","querySelector","classList","add","remove","header_Header","components_Hero","content_Content","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.26da48de.chunk.js","sourcesContent":["import React from 'react';\r\n// import { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\n\r\nconst NavbarMenu = props => (\r\n  <>\r\n    <ul className=\"navbar-menu\">\r\n      <li className=\"closed-button\" onClick={props.showNavbarMenu} >X</li>\r\n      <li className=\"navbar-item\">Item 1</li>\r\n      <li className=\"navbar-item\">Item 2</li>\r\n      <li className=\"navbar-item\">Item 3</li>\r\n      <li className=\"navbar-item\">Item 4</li>\r\n    </ul>\r\n  </>\r\n)\r\n\r\nexport default NavbarMenu;","import React from 'react';\r\n\r\nconst NavbarHam = props => (\r\n  <>\r\n    <div className=\"navbar-ham\" onClick={props.showNavbarMenu}>\r\n      <span className=\"navbar-hamLine\"></span>\r\n      <span className=\"navbar-hamLine\"></span>\r\n      <span className=\"navbar-hamLine\"></span>\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default NavbarHam;","import React from 'react';\r\nimport NavbarMenu from './NavbarMenu';\r\nimport NavbarHam from './NavbarHam';\r\n\r\nconst Navbar = props => (\r\n  <div className=\"navbar\">\r\n    <div className=\"navbar-logo\">\r\n      Website Title/Logo\r\n    </div>\r\n    <NavbarMenu showNavbarMenu={props.showNavbarMenu} />\r\n    <NavbarHam showNavbarMenu={props.showNavbarMenu} />\r\n  </div>\r\n);\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport Navbar from './Navbar';\r\n\r\nconst Header = props => (\r\n  <>\r\n    <header className=\"header\">\r\n      <Navbar showNavbarMenu={props.showNavbarMenu} NavbarMenuStatus={props.NavbarMenuStatus} />\r\n    </header>\r\n  </>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Hero = props => (\r\n  <section className=\"hero\">\r\n    <h1 className=\"hero-title\" onClick={props.changeTitle}> {props.title} </h1>\r\n  </section>\r\n);\r\n\r\nexport default Hero;","import React from 'react';\r\n\r\nconst ConnetBoxs = props => (\r\n  <>\r\n    <div className=\"row\">\r\n      <div className=\"col-6 col-sm-12\"><div className=\"connent-box\"><p>Content Box 1</p></div></div>\r\n      <div className=\"col-6 col-sm-12\"><div className=\"connent-box\"><p>Content Box 2</p></div></div>\r\n    </div>\r\n    <div className=\"row\">\r\n      <div className=\"col-6 col-sm-12\"><div className=\"connent-box\"><p>Content Box 3</p></div></div>\r\n      <div className=\"col-6 col-sm-12\"><div className=\"connent-box\"><p>Content Box 4</p></div></div>\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default ConnetBoxs;","import React from 'react';\r\n\r\nconst ContentTitle = props => (\r\n  <>\r\n    <div className=\"row\">\r\n      <div className=\"col-12\">\r\n        <h2 className=\"content-title\">Section Title</h2>\r\n      </div>\r\n    </div>\r\n  </>\r\n)\r\n\r\nexport default ContentTitle;","import React from 'react';\r\nimport ContentBoxs from './ContentBoxs';\r\nimport ContentTitle from './ContentTitle';\r\n\r\nconst Content = props => (\r\n\r\n  <section className=\"content\">\r\n    <div className=\"container\">\r\n      <ContentTitle />\r\n      <ContentBoxs />\r\n      <div className=\"row\">\r\n        <div className=\"col-12 d-justify-content-center\">\r\n          <button className=\"callBtn\" onClick={props.changeShowBoxs}>Call to Action</button>\r\n        </div>\r\n      </div>\r\n      {props.showContentStatus ? <ContentBoxs /> : null }\r\n    </div>\r\n  </section>\r\n);\r\n\r\nexport default Content;","import React, { Component } from 'react';\nimport Header from './components/header/Header';\nimport Hero from './components/Hero';\nimport Content from './components/content/Content';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      heroTitle: 'Welcome Message',\n      showContentBoxs: false,\n      showNavbarMenu: false,\n    }\n  }\n\n  handleChangeTitle = () => {\n    this.setState({\n      heroTitle: 'Have a Good Time!',\n    })\n  }\n\n  handleShowBox = () => {\n    this.setState({\n      showContentBoxs: true,\n    })\n  }\n\n  handleShowNavMenu = () => {\n    const currentState = !this.state.showNavbarMenu;\n    const navbarMenu = document.querySelector('.navbar-menu');\n\n    currentState ? navbarMenu.classList.add('show_block') : navbarMenu.classList.remove('show_block')\n    this.setState({\n      showNavbarMenu: currentState,\n    })\n  }\n\n  render() {\n    return (\n      <>\n        <Header showNavbarMenu={this.handleShowNavMenu} NavbarMenuStatus={this.state.showNavbarMenu} />\n        <Hero title={this.state.heroTitle} changeTitle={this.handleChangeTitle}/>\n        <Content showContentStatus={this.state.showContentBoxs} changeShowBoxs={this.handleShowBox}/>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}